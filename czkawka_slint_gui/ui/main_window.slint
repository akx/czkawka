import { Button, VerticalBox , HorizontalBox, TabWidget, ListView, StandardListView, StandardTableView, CheckBox} from "std-widgets.slint";
import {SelectableTableView} from "selectable_tree_view.slint";

enum CurrentTab {
    EmptyFolders,
    SimilarImages,
}

export component MainWindow {
    callback deleted;    
    in-out property <CurrentTab> active-tab;
    in-out property <[{checked: bool, selected_row: bool, val:[string]}]> empty-folder-model: [
        {checked: false, selected_row: false, val: ["kropkarz", "/Xd1", "24.10.2023"]} ,
        {checked: false, selected_row: true, val: ["witasphere", "/Xd1/Imagerren2", "25.11.1991"]} ,
        {checked: true, selected_row: false, val: ["lokkaler", "/Xd1/Vide2", "01.23.1911"]} ,
];

    min-width: 200px;
    VerticalBox {
        HorizontalBox {
            // min-width: 600px;
            preferred-height: 300px;

            tab_bar := VerticalLayout {
                width: 120px;
                spacing: 3px;
                Button {
                    text: "Empty Folders";
                    clicked => { root.active-tab = CurrentTab.EmptyFolders; }
                }
                Button {
                    text: "Similar Images";
                    clicked => { root.active-tab = CurrentTab.SimilarImages; }
                }
            }

            // TODO - using root.active-tab in visible property will not
            if root.active-tab == CurrentTab.EmptyFolders: SelectableTableView {
                min-width: 200px;

                columns: ["Selection", "Folder Name", "Path", "Modification Date"];
                values: empty-folder-model;
            }
        }
        HorizontalBox {
            scan_button:= Button {
                text: "Scan";
            }
            delete_button:= Button {
                text: "Delete";
                clicked => {
                    root.deleted();
                }
            }
        }
    }
}

